class Solution {
public:
    vector<int> findAnagrams(string s, string p) {
        vector<int>ans;
        if(p.size()>s.size())return ans;
        unordered_map<char,int>mps;
        for(int j=0;j<p.size();j++){
            mps[p[j]]++;
        }
        unordered_map<char, int> window = mps;
        int count =0;
        for(int j=0;j<p.size();j++){
            if(window.find(s[j])!=window.end()){
                window[s[j]]--;
                if(window[s[j]]==0)
                    count++;
            }
        }
        if(count==mps.size())
        ans.push_back(0);
        for(int i=1;i<=s.size()-p.size();i++){
            if(mps.find(s[i-1])!=mps.end()){
                if(window[s[i-1]]==0){
                    count--;
                }
                window[s[i-1]]++;
            }
            if(mps.find(s[i+p.size()-1])!=mps.end()){
                window[s[i + p.size() - 1]]--;
                if(window[s[i+p.size()-1]]==0){
                    count++;
                }
            }
            if(count==mps.size())
            ans.push_back(i);
        }
        return ans;
    }
};